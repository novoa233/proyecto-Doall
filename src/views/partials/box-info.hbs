	<ul class="box-info p-0">
				<li class="lista_box_info">
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<span class="fs-6" id="n_projs"></span>
						<span class="fs-6">Proyectos</span><br>
						<span class="fs-6" id="n_lists">5</span>
						<span class="fs-6">Listas</span><br>
						<span class="fs-6" id="n_tasks">5</span>
						<span class="fs-6">Tareas</span>
					</span>
				</li>
				<li class="lista_box_info">
					<i class='bx bxs-group' ></i>
					<span class="text">
						<h3 id="n_contacts">2834</h3>
						<p>Contactos</p>
					</span>
				</li>
				<li class="lista_box_info">
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text" id="indicadores">
						<span class="fs-6 d-none" id="dolar_actual"></span><br>
						<span class="fs-6 d-none" id="uf_actual"></span> <br>
						<span class="fs-6 d-none" id="bitcoin_actual"></span><br>
						<div class="spinner-border text-info mx-auto" role="status" id="wait_indices">
							<span class="visually-hidden">Loading...</span>
							
						</div>
						
					</span>
				</li>
				
                <li class="lista_box_info">
					<a href="#" data-bs-toggle="offcanvas" data-bs-target="#offcanvas_calculadora" aria-controls="offcanvasExample"><i class='bx bxs-calculator' ></i>	</a>
					<span class="text">
						<h3>Calculadora</h3>
						<p>Calculaora</p>
					</span>
				</li>
			</ul>


<!--modal de prueba-->
<!--->

<!--calculadora modal--->
  <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvas_calculadora" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="offcanvasExampleLabel">Calculadora Rápida</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="modal-body">     
        <main class="cont-general min-flex ">
            <div class="sub-general container">            
                <div class="row  min-flex mx-auto">
                    <div class="calculadora container col-8 border w-100">
                        <div class="row cont-display min-flex">
                                <div class="display text-white bg-dark w-75 my-3">
                                    <div id="valor-anterior"></div>
                                    <div id="valor-actual"></div>
                                </div>
                        </div>
                                                 
                        <div class="row min-flex">
                                <button class="btn btn_calculadora btn-secondary col-2" onclick="display.deleteAll()">C</button>
                                <button class="btn btn_calculadora btn-secondary col-2" onclick="display.deleteValue()">&larr;</button>
                                <button class="btn btn_calculadora btn-dark col-2 operador" value="potenciar">^</button>
                                <button class="btn btn_calculadora btn-dark col-2 operador" value="raiz">√x</button>
                        </div>
                        <div class="row min-flex">
                                <button class="btn btn_calculadora btn-light col-2 numero">7</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">8</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">9</button>
                                <button class="btn btn_calculadora btn-dark col-2 operador" value="dividir">%</button>
                        </div>
                        <div class="row min-flex">
                                <button class="btn btn_calculadora btn-light col-2 numero">6</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">5</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">4</button>
                                <button class="btn btn_calculadora btn-dark col-2 operador" value="multiplicar">x</button>
                        </div>
                        <div class="row min-flex">
                                <button class="btn btn_calculadora btn-light col-2 numero">3</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">2</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">1</button>
                                <button class="btn btn_calculadora btn-dark col-2 operador" value="restar">-</button>
                        </div>
                        <div class="row min-flex">
                                <button class="btn btn_calculadora btn-light col-2 numero">0</button>
                                <button class="btn btn_calculadora btn-light col-2 numero">.</button>
                                <button class="btn btn_calculadora btn-light col-2 operador" value="igual">=</button>
                                <button class="btn btn-dark col-2 operador" value="sumar">+</button>
                        </div>
                    </div>
                </div>
            </div>
        </main>
		<div>

        <table class="table table-hover ">
            <thead>
            <tr>
                <th>Nombre</th>
                <th>Valor</th>
                <th>Acción</th>
            </tr>    
            </thead>
            <tbody id="tbody_calculadora">
               
            </tbody>
        </table>
		</div>


    </div>
  </div>

<script>
(async()=>{
	let datos=await fetch('/getAllProjects')
	let result=await datos.json();
	document.getElementById('midunique').textContent=result.user.id
	document.getElementById('n_projs').innerHTML=result.projects.length
	document.getElementById('n_lists').innerHTML=result.lists.length
	document.getElementById('n_tasks').innerHTML=result.tasks.length
	document.getElementById('n_contacts').innerHTML=result.contacts.length
		console.log('result', result)
	let modo=result.user.config.modo

	let body=document.querySelector('body')
body.classList.remove('normal')
body.classList.remove('dark')

body.classList.add(modo)
	
const mode =document.querySelector('#switch-mode')
    if(document.querySelector('body').className=="dark"){
         mode.setAttribute('checked', true )
         console.log('detectado modo dark. Se activó el check (true)')
    }
    mode.addEventListener("click",async()=>{

       const mode= await fetch(`/saveconfigmode`,{
            method: "PUT",
            headers: {
            "Content-Type": "application/json"
            },
            body: JSON.stringify({modo:'cambiado'})
        })
        res= await mode.json()
        console.log(res)
    });




	//guardar orden de listas el localStorage
	const projectsname=result.projects.map(x=>x.nombre)
	const projectsId=result.projects.map(x=>x.id)
	projectsname.forEach((nom, index)=>{
		if(!localStorage.getItem(`${nom}_listas`)){
			let listasOrder= result.lists.filter(li=>li.projectId==projectsId[index]).map((_, index)=>index+1).join('-')
			localStorage.setItem(`${nom}_listas`, listasOrder)			
		}
	});

	//clima
	window.addEventListener('load',()=>{
		let lat;
		let lon;
		if(navigator.geolocation){
			navigator.geolocation.getCurrentPosition(async (posicion)=>{
				lon=posicion.coords.longitude;
				lat=posicion.coords.latitude;
				
				const URL=`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&lang=es&units=metric&appid=cb79b6df2aaf547d22072ad4a87d50f2`
		
				try{
					const solicitud= await fetch(URL)
					const clima= await solicitud.json()
					
					document.getElementById('text_clima').textContent=clima.current.weather[0].description
					document.getElementById('text_zona_horaria').textContent=clima.timezone.split('/')[1]
					document.getElementById('text_temperatura').textContent=clima.current.temp + " °C";
					let icon_weather=document.getElementById('icon_weather')

					{{!-- icon_weather.src=` http://openweathermap.org/img/wn/${clima.current.weather[0].icon}@2x.png`  --}}
					switch (clima.current.weather[0].main) {
						case 'Thunderstorm':
							icon_weather.src='img/icons/thunder.svg'
							console.log('TORMENTA');
						break;
						case 'Drizzle':
							icon_weather.src='img/icons/rainy-2.svg'
							console.log('LLOVIZNA');
						break;
						case 'Rain':
							icon_weather.src='img/icons/rainy-7.svg'
						break;
						case 'Snow':
							icon_weather.src='img/icons/snowy-6.svg'
						break;                        
						case 'Clear':
							icon_weather.src='img/icons/day.svg'
						break;
						case 'Atmosphere':
						icon_weather.src='img/icons/weather.svg'
							break;  
						case 'Clouds':
							icon_weather.src='img/icons/cloudy-day-1.svg'
							break;  
						default:
						icon_weather.src='img/icons/cloudy-day-1.svg'
						console.log('por defecto');
					}
				}catch(error){
					console.log(error)
				}
			})
		}
	})
})()
</script>